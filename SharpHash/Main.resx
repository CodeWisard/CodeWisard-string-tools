<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="KeyRefresh.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>